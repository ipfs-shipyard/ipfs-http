/*
 * IPFS API Documentation
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

var routes = Routes{
	{
		"Index",
		"GET",
		"//",
		Index,
	},

	{
		"Ledger",
		strings.ToUpper("Get"),
		"//bitswap/ledger/{peerId}",
		Ledger,
	},

	{
		"Reprovide",
		strings.ToUpper("Post"),
		"//bitswap/reprovide",
		Reprovide,
	},

	{
		"Stats",
		strings.ToUpper("Get"),
		"//bitswap/stats",
		Stats,
	},

	{
		"Unwant",
		strings.ToUpper("Delete"),
		"//bitswap/wantlist/{cid}",
		Unwant,
	},

	{
		"Wantlist",
		strings.ToUpper("Get"),
		"//bitswap/wantlist",
		Wantlist,
	},

	{
		"Get",
		strings.ToUpper("Get"),
		"//config",
		Get,
	},

	{
		"Patch",
		strings.ToUpper("Patch"),
		"//config",
		Patch,
	},

	{
		"Replace",
		strings.ToUpper("Put"),
		"//config",
		Replace,
	},

	{
		"Reset",
		strings.ToUpper("Delete"),
		"//config",
		Reset,
	},

	{
		"Create",
		strings.ToUpper("Post"),
		"//dag",
		Create,
	},

	{
		"Get",
		strings.ToUpper("Get"),
		"//dag/{cid}",
		Get,
	},

	{
		"Remove",
		strings.ToUpper("Delete"),
		"//dag/{cid}",
		Remove,
	},

	{
		"Update",
		strings.ToUpper("Patch"),
		"//dag/{cid}",
		Update,
	},

	{
		"FindPeer",
		strings.ToUpper("Get"),
		"//dht/peer/{peerId}",
		FindPeer,
	},

	{
		"FindProviders",
		strings.ToUpper("Get"),
		"//dht/providers/{cid}",
		FindProviders,
	},

	{
		"Get",
		strings.ToUpper("Get"),
		"//dht/{key}",
		Get,
	},

	{
		"Provide",
		strings.ToUpper("Post"),
		"//dht/provide",
		Provide,
	},

	{
		"Put",
		strings.ToUpper("Post"),
		"//dht/{cid}",
		Put,
	},

	{
		"Query",
		strings.ToUpper("Get"),
		"//dht/query/{peerId}",
		Query,
	},

	{
		"Dns",
		strings.ToUpper("Get"),
		"//dns/{path}",
		Dns,
	},

	{
		"DeleteFilesPath",
		strings.ToUpper("Delete"),
		"//files/{path}",
		DeleteFilesPath,
	},

	{
		"GetFilesPath",
		strings.ToUpper("Get"),
		"//files/{path}",
		GetFilesPath,
	},

	{
		"PatchFilesPath",
		strings.ToUpper("Patch"),
		"//files/{path}",
		PatchFilesPath,
	},

	{
		"PostFilesPath",
		strings.ToUpper("Post"),
		"//files/{path}",
		PostFilesPath,
	},

	{
		"PutFilesPath",
		strings.ToUpper("Put"),
		"//files/{path}",
		PutFilesPath,
	},

	{
		"Generate",
		strings.ToUpper("Post"),
		"//key",
		Generate,
	},

	{
		"List",
		strings.ToUpper("Get"),
		"//key",
		List,
	},

	{
		"Remove",
		strings.ToUpper("Delete"),
		"//key/{name}",
		Remove,
	},

	{
		"Rename",
		strings.ToUpper("Patch"),
		"//key/{name}",
		Rename,
	},

	{
		"Publish",
		strings.ToUpper("Post"),
		"//name",
		Publish,
	},

	{
		"Resolve",
		strings.ToUpper("Get"),
		"//name/{name}",
		Resolve,
	},

	{
		"Add",
		strings.ToUpper("Post"),
		"//pins",
		Add,
	},

	{
		"List",
		strings.ToUpper("Get"),
		"//pins",
		List,
	},

	{
		"Remove",
		strings.ToUpper("Delete"),
		"//pins/{hash}",
		Remove,
	},

	{
		"List",
		strings.ToUpper("Get"),
		"//pubsub/topics",
		List,
	},

	{
		"Subscribe",
		strings.ToUpper("Post"),
		"//pubsub/topics",
		Subscribe,
	},

	{
		"List",
		strings.ToUpper("Post"),
		"//repo/gc",
		List,
	},

	{
		"Stats",
		strings.ToUpper("Get"),
		"//repo",
		Stats,
	},

	{
		"Addrs",
		strings.ToUpper("Get"),
		"//swarm/connections",
		Addrs,
	},

	{
		"Addrs_0",
		strings.ToUpper("Post"),
		"//swarm/connections",
		Addrs_0,
	},

	{
		"Addrs_1",
		strings.ToUpper("Get"),
		"//swarm/peers",
		Addrs_1,
	},

	{
		"Addrs_2",
		strings.ToUpper("Delete"),
		"//swarm/connections/{address}",
		Addrs_2,
	},

	{
		"Dns",
		strings.ToUpper("Post"),
		"//swarm/peers/{peerId}/ping",
		Dns,
	},

	{
		"Info",
		strings.ToUpper("Get"),
		"//swarm/peer",
		Info,
	},
}
